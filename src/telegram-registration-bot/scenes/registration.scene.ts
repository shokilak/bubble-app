import { Hears, SceneEnter, Wizard, WizardStep } from "nestjs-telegraf";
import { Composer, Context, Scenes, Telegram } from "telegraf";
import { Keyboard } from "telegram-keyboard";
import axios from "axios";
import { CheckClientCodeDto } from "../../auth/dto/check-client-code.dto";

@Wizard('registration')
export class RegistrationScene {

  @SceneEnter()
  async enter(ctx) {
    const keyboard = Keyboard.make([
      ['üëå –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'],
      ['‚¨ÖÔ∏è –û–±—Ä–∞—Ç–Ω–æ'],
    ])
    const chat = await ctx.getChat()
    ctx.session.chatId = chat.id
    await ctx.replyWithHTML(`<b>${ctx.chat.username}</b>, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –ø—Ä–æ—á–∏—Ç–∞–ª–∞, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç–∞—Ä—Ü–∏—é?`, keyboard.reply())
  }

  @WizardStep(1)
  async enterScene(ctx) {
    const keyboard = Keyboard.make(['‚¨ÖÔ∏è –û–±—Ä–∞—Ç–Ω–æ'])
    await ctx.replyWithHTML(`<b>${ctx.chat.username}</b>, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.`, keyboard.reply())
    await ctx.wizard.next()
  }

  @WizardStep(2)
  async setClientCode(ctx) {
    const keyboard = Keyboard.make([
      ['üëÄ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥'],
      ['‚¨ÖÔ∏è –û–±—Ä–∞—Ç–Ω–æ']
    ])
    ctx.session.clientCode = await ctx.message.text
    await ctx.replyWithHTML(`–ö–æ–¥ <b>${ctx.session.clientCode}</b> –ø—Ä–∏–Ω—è—Ç, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å?`, keyboard.reply())
    await ctx.wizard.next()
  }

  @WizardStep(4)
  async checkClientCode(ctx) {
    const data: CheckClientCodeDto = {clientCode: ctx.session.clientCode}
    const keyboard = Keyboard.make(['‚¨ÖÔ∏è –û–±—Ä–∞—Ç–Ω–æ'])

    const flag = await axios.post('http://localhost:8080/auth/check-clientCode', data)

    console.log(flag.data)
    if (flag.data.botCode){
      await ctx.replyWithHTML(`–í–∞—à –∫–æ–¥ <b>${ctx.session.clientCode}</b> –Ω–∞–π–¥–µ–Ω. –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ <b>${flag.data.botCode}</b> –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –≤–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ <b>Bubble</b>.`, keyboard.reply())

    }
    if (flag.data.botCode == undefined){
      const keyboard = Keyboard.make([
        ['üëÄ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—Ä—É–≥–æ–π –∫–æ–¥'],
        ['‚¨ÖÔ∏è –û–±—Ä–∞—Ç–Ω–æ']
      ])
      await ctx.replyWithHTML(`–í–∞—à –∫–æ–¥ <b>${ctx.session.clientCode}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω.`, keyboard.reply())
      await ctx.wizard.selectStep(0)
    }
  }

  @Hears('‚¨ÖÔ∏è –û–±—Ä–∞—Ç–Ω–æ')
  leaveCommand(ctx: Scenes.SceneContext) {
    return ctx.scene.enter('start')
  }
}